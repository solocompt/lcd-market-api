# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-04-04 00:54
from __future__ import unicode_literals

from django.db import migrations

def backwards(apps, schema_editor):
    """
    What to do when migrating backwards?
    In this case we do nothing
    """
    pass

def load_fines(apps, schema_editor):
    """
    Load system account
    """
    fines = [
        {'name': 'Weekly Report', 'description': 'Esquecer de enviar o Weekly Report',
        'value': 30, 'is_approved': True, 'is_fine': True},
        {'name': 'Email sem resposta', 'description': 'Nao responder a emails',
        'value': 20, 'is_approved': True, 'is_fine': True},
        {'name': 'Atraso', 'description': 'Chegar atrasado',
        'value': 25, 'is_approved': True, 'is_fine': True},
        {'name': 'Aviso tardio', 'description': 'Avisar tardiamente uma falta',
        'value': 100, 'is_approved': True, 'is_fine': True},
        {'name': 'Falta injustificada', 'description': 'Faltar sem dar justificacao',
        'value': 250, 'is_approved': True, 'is_fine': True},
        {'name': 'Falta de aviso - tarefa terminada', 'description': 'Terminar tarefas sem avisar quem pediu a tarefa',
        'value': 20, 'is_approved': True, 'is_fine': True},
        {'name': 'Falta de aviso - falha em deadline', 'description': 'Nao avisar com antecedencia que uma deadline pode falhar',
        'value': 150, 'is_approved': True, 'is_fine': True},
        {'name': 'Loica suja', 'description': 'Deixar loica suja',
        'value': 5, 'is_approved': True, 'is_fine': True},
        {'name': 'Interromper reunioes', 'description': 'Interromper reunioes da gestao sem antes falar no Slack',
        'value': 10, 'is_approved': True, 'is_fine': True},
        {'name': 'Perturbar outros', 'description': 'Falar na sala de desenvolvimento de forma a perturbar o trabalho dos outros',
        'value': 10, 'is_approved': True, 'is_fine': True},
        {'name': 'Esquecer compras', 'description': 'Esquecer de comprar as coisas do headquarters',
        'value': 40, 'is_approved': True, 'is_fine': True},
        {'name': 'Abrir/Fechar incorreto/atrasado', 'description': 'Abrir ou fechar o espaco atrasado ou de forma incorreta',
        'value': 20, 'is_approved': True, 'is_fine': True},
        {'name': 'Reciclagem no lixo', 'description': 'Deitar lixo reciclavel no cesto errado',
        'value': 5, 'is_approved': True, 'is_fine': True},
        {'name': 'Tarefa ligada', 'description': 'Esquecer tarefa ligada',
        'value': 10, 'is_approved': True, 'is_fine': True}
        ]
    for fine in fines:
        model = apps.get_model("api", "Product")
        try:
            model.objects.get(name=fine['name'])
        except model.DoesNotExist:
            model.objects.create(**fine)

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0004_transfer'),
    ]

    operations = [
        migrations.RunPython(load_fines, backwards)
    ]
